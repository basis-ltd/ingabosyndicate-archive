input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Ingabo @model @aws_api_key @aws_iam @auth(rules: [
  { allow: public, operations: [create, read, update]},
  { allow: owner }
]) {
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  _version: Int!
  activity1: Boolean
  activity2: Boolean
  activity3: Boolean
  activity4: Boolean
  activity5: Boolean
  activity6: Boolean
  activity7: Boolean
  activity8: Boolean
  addressCell: String
  addressDistrict: String
  addressSector: String
  cooperative: String
  createdAt: AWSDateTime!
  dateofbirth: AWSDate
  fullName: String
  gender: String
  id: ID!
  nationalID: String
  telephone: String
  updatedAt: AWSDateTime!
}

type ModelIngaboConnection @aws_api_key @aws_iam {
  items: [Ingabo]!
  nextToken: String
  startedAt: AWSTimestamp
}

type Mutation {
  createIngabo(condition: ModelIngaboConditionInput, input: CreateIngaboInput!): Ingabo @aws_api_key @aws_iam
  deleteIngabo(condition: ModelIngaboConditionInput, input: DeleteIngaboInput!): Ingabo @aws_api_key @aws_iam
  updateIngabo(condition: ModelIngaboConditionInput, input: UpdateIngaboInput!): Ingabo @aws_api_key @aws_iam
}

type Query @model @auth(rules: [
  { allow: public, operations: [read]},
  { allow: owner }
]) {
  getIngabo(id: ID!): Ingabo @aws_api_key @aws_iam
  listIngabos(filter: ModelIngaboFilterInput, limit: Int, nextToken: String): ModelIngaboConnection @aws_api_key @aws_iam
  syncIngabos(filter: ModelIngaboFilterInput, lastSync: AWSTimestamp, limit: Int, nextToken: String): ModelIngaboConnection @aws_api_key @aws_iam
}

type Subscription {
  onCreateIngabo(filter: ModelSubscriptionIngaboFilterInput): Ingabo @aws_api_key @aws_iam @aws_subscribe(mutations : ["createIngabo"])
  onDeleteIngabo(filter: ModelSubscriptionIngaboFilterInput): Ingabo @aws_api_key @aws_iam @aws_subscribe(mutations : ["deleteIngabo"])
  onUpdateIngabo(filter: ModelSubscriptionIngaboFilterInput): Ingabo @aws_api_key @aws_iam @aws_subscribe(mutations : ["updateIngabo"])
}

enum ModelAttributeTypes {
  _null
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
}

enum ModelSortDirection {
  ASC
  DESC
}

input CreateIngaboInput {
  _version: Int
  activity1: Boolean
  activity2: Boolean
  activity3: Boolean
  activity4: Boolean
  activity5: Boolean
  activity6: Boolean
  activity7: Boolean
  activity8: Boolean
  addressCell: String
  addressDistrict: String
  addressSector: String
  cooperative: String
  dateofbirth: AWSDate
  fullName: String
  gender: String
  id: ID
  nationalID: String
  telephone: String
}

input DeleteIngaboInput {
  _version: Int
  id: ID!
}

input ModelBooleanInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  eq: Boolean
  ne: Boolean
}

input ModelFloatInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input ModelIDInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input ModelIngaboConditionInput {
  activity1: ModelBooleanInput
  activity2: ModelBooleanInput
  activity3: ModelBooleanInput
  activity4: ModelBooleanInput
  activity5: ModelBooleanInput
  activity6: ModelBooleanInput
  activity7: ModelBooleanInput
  activity8: ModelBooleanInput
  addressCell: ModelStringInput
  addressDistrict: ModelStringInput
  addressSector: ModelStringInput
  and: [ModelIngaboConditionInput]
  cooperative: ModelStringInput
  dateofbirth: ModelStringInput
  fullName: ModelStringInput
  gender: ModelStringInput
  nationalID: ModelStringInput
  not: ModelIngaboConditionInput
  or: [ModelIngaboConditionInput]
  telephone: ModelStringInput
}

input ModelIngaboFilterInput {
  activity1: ModelBooleanInput
  activity2: ModelBooleanInput
  activity3: ModelBooleanInput
  activity4: ModelBooleanInput
  activity5: ModelBooleanInput
  activity6: ModelBooleanInput
  activity7: ModelBooleanInput
  activity8: ModelBooleanInput
  addressCell: ModelStringInput
  addressDistrict: ModelStringInput
  addressSector: ModelStringInput
  and: [ModelIngaboFilterInput]
  cooperative: ModelStringInput
  dateofbirth: ModelStringInput
  fullName: ModelStringInput
  gender: ModelStringInput
  id: ModelIDInput
  nationalID: ModelStringInput
  not: ModelIngaboFilterInput
  or: [ModelIngaboFilterInput]
  telephone: ModelStringInput
}

input ModelIntInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input ModelStringInput {
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input ModelSubscriptionBooleanInput {
  eq: Boolean
  ne: Boolean
}

input ModelSubscriptionFloatInput {
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  in: [Float]
  le: Float
  lt: Float
  ne: Float
  notIn: [Float]
}

input ModelSubscriptionIDInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  in: [ID]
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  notIn: [ID]
}

input ModelSubscriptionIngaboFilterInput {
  activity1: ModelSubscriptionBooleanInput
  activity2: ModelSubscriptionBooleanInput
  activity3: ModelSubscriptionBooleanInput
  activity4: ModelSubscriptionBooleanInput
  activity5: ModelSubscriptionBooleanInput
  activity6: ModelSubscriptionBooleanInput
  activity7: ModelSubscriptionBooleanInput
  activity8: ModelSubscriptionBooleanInput
  addressCell: ModelSubscriptionStringInput
  addressDistrict: ModelSubscriptionStringInput
  addressSector: ModelSubscriptionStringInput
  and: [ModelSubscriptionIngaboFilterInput]
  cooperative: ModelSubscriptionStringInput
  dateofbirth: ModelSubscriptionStringInput
  fullName: ModelSubscriptionStringInput
  gender: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  nationalID: ModelSubscriptionStringInput
  or: [ModelSubscriptionIngaboFilterInput]
  telephone: ModelSubscriptionStringInput
}

input ModelSubscriptionIntInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  in: [Int]
  le: Int
  lt: Int
  ne: Int
  notIn: [Int]
}

input ModelSubscriptionStringInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  in: [String]
  le: String
  lt: String
  ne: String
  notContains: String
  notIn: [String]
}

input UpdateIngaboInput {
  _version: Int
  activity1: Boolean
  activity2: Boolean
  activity3: Boolean
  activity4: Boolean
  activity5: Boolean
  activity6: Boolean
  activity7: Boolean
  activity8: Boolean
  addressCell: String
  addressDistrict: String
  addressSector: String
  cooperative: String
  dateofbirth: AWSDate
  fullName: String
  gender: String
  id: ID!
  nationalID: String
  telephone: String
}
